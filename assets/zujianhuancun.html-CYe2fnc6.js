import{_ as n,c as s,a as t,o as e}from"./app-BJ3_yarB.js";const p={};function l(i,a){return e(),s("div",null,a[0]||(a[0]=[t(`<h2 id="什么是组件缓存" tabindex="-1"><a class="header-anchor" href="#什么是组件缓存"><span>什么是组件缓存？</span></a></h2><p>切换组件时再返回缓存的组件组件不会重新渲染，被缓存的组件加载速度更快，只加载一次,可以使用vue提供的<code>keep-alive</code>标签可实现组件缓存,</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>属性:</p><ul><li>include 定义需要缓存的组件名称 <ul><li>include=&quot;name1,name2&quot;</li></ul></li><li>exclude 定义不需要缓存的组件名称 <ul><li>exclude=&quot;name1,name2&quot;</li><li>优先级比include高</li></ul></li><li>max 缓存组件最大的数量 <ul><li>max=&quot;1&quot;</li><li>可动态修改数量</li></ul></li></ul><h2 id="组件缓存的优化写法" tabindex="-1"><a class="header-anchor" href="#组件缓存的优化写法"><span>组件缓存的优化写法</span></a></h2><p>keep-alive模式是全部缓存，有些不必要组件缓存也没有什么意义，还会造成内存的的消耗</p><h3 id="在路由表中定义一些标识" tabindex="-1"><a class="header-anchor" href="#在路由表中定义一些标识"><span>在路由表中定义一些标识</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token punctuation">{</span> </span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;路径&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">  <span class="token comment">//是否缓存</span></span>
<span class="line">  <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">isKeepAlive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app-vue判断" tabindex="-1"><a class="header-anchor" href="#app-vue判断"><span>app.vue判断</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$route.meta.isKeepAlive<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!$route.meta.isKeepAlive<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const o=n(p,[["render",l],["__file","zujianhuancun.html.vue"]]),u=JSON.parse('{"path":"/blogs/VUE2/zujianhuancun.html","title":"组件缓存","lang":"en-US","frontmatter":{"title":"组件缓存","date":"2022-7-25","autoSort":15,"tags":["VUE2"],"categories":["VUE2"]},"headers":[{"level":2,"title":"什么是组件缓存？","slug":"什么是组件缓存","link":"#什么是组件缓存","children":[]},{"level":2,"title":"组件缓存的优化写法","slug":"组件缓存的优化写法","link":"#组件缓存的优化写法","children":[{"level":3,"title":"在路由表中定义一些标识","slug":"在路由表中定义一些标识","link":"#在路由表中定义一些标识","children":[]},{"level":3,"title":"app.vue判断","slug":"app-vue判断","link":"#app-vue判断","children":[]}]}],"git":{"createdTime":1728696783000,"updatedTime":1728696783000,"contributors":[{"name":"刘政杨","email":"314781333@qq.com","commits":1}]},"filePathRelative":"blogs/VUE2/组件缓存.md"}');export{o as comp,u as data};
