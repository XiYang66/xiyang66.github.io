import{_ as t,c as o,a as e,b as n,d as p,e as l,o as i,r as c}from"./app-BJ3_yarB.js";const r={},u={href:"https://imgtu.com/i/jbKW80",target:"_blank",rel:"noopener noreferrer"},d={href:"https://imgtu.com/i/jbQnl6",target:"_blank",rel:"noopener noreferrer"};function k(v,s){const a=c("ExternalLinkIcon");return i(),o("div",null,[s[4]||(s[4]=e(`<h2 id="父子传参" tabindex="-1"><a class="header-anchor" href="#父子传参"><span>父子传参</span></a></h2><h3 id="父组件向子组件传参" tabindex="-1"><a class="header-anchor" href="#父组件向子组件传参"><span>父组件向子组件传参</span></a></h3><blockquote><p>父组件引用子组件通过v-bind(简写：<code>:src</code>)绑定值，子组件通过props获取</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">  <span class="token comment">// 父组件</span></span>
<span class="line">  <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>child <span class="token operator">:</span>message<span class="token operator">=</span><span class="token string">&quot;message&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>child<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">import</span> Child <span class="token keyword">from</span> <span class="token string">&#39;./Child.vue&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      Child</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;hello vue2.x&#39;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 子组件</span></span>
<span class="line">  <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;test&#39;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子组件向父组件传参" tabindex="-1"><a class="header-anchor" href="#子组件向父组件传参"><span>子组件向父组件传参</span></a></h3><blockquote><p>在子组件中使用$emit绑定一个自定义事件, 当这个执行这个语句时，就会将参数传递给父组件</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">  <span class="token comment">// 父组件</span></span>
<span class="line">  <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span>num<span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span>child <span class="token operator">:</span>num<span class="token operator">=</span><span class="token string">&quot;num&quot;</span> @addCount<span class="token operator">=</span><span class="token string">&quot;addCount&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>child<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">import</span> Child <span class="token keyword">from</span> <span class="token string">&#39;./Child.vue&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      Child</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">100</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">=</span> res</span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 子组件</span></span>
<span class="line">  <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">&quot;primary&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;addCount&quot;</span><span class="token operator">&gt;</span>count<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span></span>
<span class="line">          <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;addCount&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="eventbus" tabindex="-1"><a class="header-anchor" href="#eventbus"><span>eventBus</span></a></h2><blockquote><p>EventBus又称为事件总线，可以使用它来进行组件之间通信。其实和vuex还是有些类似的，相当于所有组件共用一个事件中心，这个事件中心用来管理事件，当我们需要用到的时候就向事件中心发送或者接受事件。通过共享一个vue实例，使用该实例的$on以及$emit实现数据传递。</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">## vue2<span class="token punctuation">.</span>x</span>
<span class="line">  <span class="token comment">// eventBus.js</span></span>
<span class="line">  <span class="token keyword">const</span> eventBus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">export</span> <span class="token keyword">default</span> eventBus</span>
<span class="line"></span>
<span class="line">  <span class="token comment">// A 组件</span></span>
<span class="line">  <span class="token keyword">import</span> eventBus <span class="token keyword">from</span> <span class="token string">&#39;./eventBus&#39;</span></span>
<span class="line">  <span class="token comment">// 通过emit发送消息</span></span>
<span class="line">  eventBus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// B组件</span></span>
<span class="line">  <span class="token keyword">import</span> eventBus <span class="token keyword">from</span> <span class="token string">&#39;./eventBus&#39;</span></span>
<span class="line">  <span class="token comment">// 通过$on接收消息</span></span>
<span class="line">  eventBus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;收到消息!&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 组件销毁时需要解绑监听</span></span>
<span class="line">  <span class="token function">beforeDestroy</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\\</span>
<span class="line">    eventBus<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span>\\</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vuex" tabindex="-1"><a class="header-anchor" href="#vuex"><span>VUEX</span></a></h2><p>安装：<code>npmx i vuex</code></p><blockquote><p>状态管理工具,vuex简称五个部分state(状态仓库),getters(缓存依赖),mutations(同步操作),actions(异步操作),模块(modules)。<br></p></blockquote><h3 id="vuex的五个核心模块" tabindex="-1"><a class="header-anchor" href="#vuex的五个核心模块"><span>vuex的五个核心模块</span></a></h3><ul><li><p>state</p><ul><li>用来存储数据，变量</li></ul></li><li><p>getters</p><ul><li>监听state计算属性</li><li>有return值</li></ul></li><li><p>mutations 同步方法</p><ul><li>第一个值是state</li><li>第二个是参数</li></ul></li><li><p>actions: 异步方法</p><ul><li>第一个值是&#39;dispatch,commit&#39; <ul><li>dispatch （‘方法名’，值） 异步调异步</li><li>commit （‘方法名’ ，值）异步调同步</li></ul></li><li>第二个是参数</li></ul></li><li><p>modules: 区分模块</p><ul><li>namespaced:true //模块独立化</li></ul></li></ul><p>总结</p><ol><li>前四个写在modules文件下的js中</li><li>mutations可修改数据，actions改需调用mutations</li><li>同步不可调异步，异步可调同步</li></ol><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><blockquote><p>commit同步操作:this.$store.commit(&#39;mutations方法名&#39;，值) <br></p></blockquote><blockquote><p>dispatch:异步操作，this.$store.dispatch(&#39;actions方法名&#39;，值)</p></blockquote>`,20)),n("p",null,[s[1]||(s[1]=p("模块独立需要在方法名前加上是那个文件的方法 ")),n("a",u,[s[0]||(s[0]=n("img",{src:"https://s1.ax1x.com/2022/07/20/jbKW80.png",alt:"jbKW80.png"},null,-1)),l(a)])]),s[5]||(s[5]=e('<h3 id="辅助函数-调用vuex模块" tabindex="-1"><a class="header-anchor" href="#辅助函数-调用vuex模块"><span>辅助函数 调用VUEX模块</span></a></h3><ul><li>mapState <ul><li>在computed中引入</li><li>...mapState({userData: state=&gt;state.组件名.数据})</li></ul></li><li>mapGetters <ul><li>在computed中引入</li><li>...mapGetters({state: &#39;组件名/state&#39;})</li></ul></li><li>mapMutations <ul><li>methods中引入</li><li>...mapMutations({fun:&#39;组件名/fun&#39;})</li></ul></li><li>mapAcations <ul><li>methods中引入</li><li>...mapAcations({fun:&#39;组件名/fun&#39;})</li></ul></li></ul><h3 id="vx缓存数据" tabindex="-1"><a class="header-anchor" href="#vx缓存数据"><span>vx缓存数据</span></a></h3>',3)),n("p",null,[s[3]||(s[3]=p("因为刷新页面，修改后的需要重新请求,所以我们可以往本地存储中存放数据，页面刷新后给vx重新赋值方法如下↓ ")),n("a",d,[s[2]||(s[2]=n("img",{src:"https://s1.ax1x.com/2022/07/20/jbQnl6.png",alt:"jbQnl6.png"},null,-1)),l(a)])])])}const b=t(r,[["render",k],["__file","chuancanfangshi.html.vue"]]),g=JSON.parse('{"path":"/blogs/VUE2/chuancanfangshi.html","title":"传参方式","lang":"en-US","frontmatter":{"title":"传参方式","date":"2022-7-19","tags":["VUE2"],"categories":["VUE2"]},"headers":[{"level":2,"title":"父子传参","slug":"父子传参","link":"#父子传参","children":[{"level":3,"title":"父组件向子组件传参","slug":"父组件向子组件传参","link":"#父组件向子组件传参","children":[]},{"level":3,"title":"子组件向父组件传参","slug":"子组件向父组件传参","link":"#子组件向父组件传参","children":[]}]},{"level":2,"title":"eventBus","slug":"eventbus","link":"#eventbus","children":[]},{"level":2,"title":"VUEX","slug":"vuex","link":"#vuex","children":[{"level":3,"title":"vuex的五个核心模块","slug":"vuex的五个核心模块","link":"#vuex的五个核心模块","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":3,"title":"辅助函数  调用VUEX模块","slug":"辅助函数-调用vuex模块","link":"#辅助函数-调用vuex模块","children":[]},{"level":3,"title":"vx缓存数据","slug":"vx缓存数据","link":"#vx缓存数据","children":[]}]}],"git":{"createdTime":1728696783000,"updatedTime":1728696783000,"contributors":[{"name":"刘政杨","email":"314781333@qq.com","commits":1}]},"filePathRelative":"blogs/VUE2/传参方式.md"}');export{b as comp,g as data};
